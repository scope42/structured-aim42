// This file is generated. Please don't modify it directly.

import { Section } from '../types'

/**
 * This is content from the [aim42 Method Reference](https://aim42.github.io/)
 * by [Gernot Starke](https://www.gernotstarke.de/) and [community
 * contributors](https://github.com/aim42/aim42/graphs/contributors), used under
 * [CC BY-SA](https://creativecommons.org/licenses/by-sa/4.0/). If you distribute
 * it, make sure to attribute the original authors.
 */
export const patternIndex: Section = {
  type: 'section',
  slug: 'pattern-index',
  id: '_pattern_index',
  sectionType: 'section',
  index: 6,
  title: 'Pattern index',
  titlePlain: 'Pattern index',
  numeral: '6',
  children: [
    {
      type: 'paragraph',
      content:
        '<div class="paragraph">\n<p>This chapter contains an alphabetic list of all patterns, practices and methods with a\nshort description and links to the explanation.</p>\n</div>'
    },
    {
      type: 'olist',
      content:
        '<div class="olist arabic">\n<ol class="arabic">\n<li>\n<p><strong><a href="#Anticorruption-Layer">Section 4.10.2, &#8220;<span class="pattern">Anticorruption Layer</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Isolate clients from internal changes of sub-systems or modules.\nCategory: <a href="#Improve">Section 4, &#8220;Improve&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><strong><a href="#Architectural-Understanding">Section 5.5, &#8220;<span class="pattern">Architectural-Understanding</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Document relevant structures, concepts, decisions, interfaces etc. of the <a href="#System">[System]</a>\nto <em>locate</em> issues, risks and opportunities for improvement.\nSee <a href="#arc42">[arc42]</a> and <a href="#View-Based-Understanding">Section 2.3.28, &#8220;<span class="pattern">View Based Understanding</span>&#8221;</a>.\nCategory: <a href="#Crosscutting">Section 5, &#8220;Cross-Cutting Practices and Patterns&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><a id="Architecture-Backlog"></a></p>\n<div class="dlist">\n<dl>\n<dt class="hdlist1"><span class="pattern">Architecture-Backlog</span></dt>\n<dd>\n<p>Keep a prioritized list of improvement tasks (<em>remedies</em>) with their as a backlog, parallel to the (regular) feature backlog.\nCategory: <a href="#Improve">Section 4, &#8220;Improve&#8221;</a></p>\n</dd>\n</dl>\n</div>\n</li>\n<li>\n<p><a id="Assertions"></a></p>\n<div class="dlist">\n<dl>\n<dt class="hdlist1"><span class="pattern">Assertions</span></dt>\n<dd>\n<p>Use assertions to verify preconditions and to make a program fail early when something goes fundamentally wrong.\nCategory: <a href="#Improve">Section 4, &#8220;Improve&#8221;</a></p>\n</dd>\n</dl>\n</div>\n</li>\n<li>\n<p><strong><a href="#ATAM">Section 2.3.1, &#8220;<span class="pattern">Atam</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Systematic approach to find architectural risks, tradeoffs (compromises) and sensitivity points.\nCategory: <a href="#Analyze">Section 2, &#8220;Analyze&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><a id="Automated-Tests"></a></p>\n<div class="dlist">\n<dl>\n<dt class="hdlist1"><span class="pattern">Automated Tests</span></dt>\n<dd>\n<p>Introduce automated tests to verify correctness or runtime behavior. Unit-, integration-, acceptance-, load- or database-tests are well-known specialisations of this.\nCategory: <a href="#Improve">Section 4, &#8220;Improve&#8221;</a></p>\n</dd>\n</dl>\n</div>\n</li>\n<li>\n<p><strong><a href="#big-bang-approach">Section 4.7.1, &#8220;<span class="pattern">Big Bang Approach</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Approach to replace an old system with a new system with one big bang deployment.\nCategory: <a href="#Improve">Section 4, &#8220;Improve&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><a id="Branch-For-Improvement"></a></p>\n<div class="dlist">\n<dl>\n<dt class="hdlist1"><span class="pattern">Branch For Improvement</span></dt>\n<dd>\n<p>Introduce distinct branches in your version control system to reflect improvements.\nCategory: <a href="#Improve">Section 4, &#8220;Improve&#8221;</a></p>\n</dd>\n</dl>\n</div>\n</li>\n<li>\n<p><a id="Bulkhead"></a></p>\n<div class="dlist">\n<dl>\n<dt class="hdlist1"><span class="pattern">Bulkhead</span></dt>\n<dd>\n<p>Can be placed between two systems to avoid the propagation of faults from one system to the other system (<a href="#Nygard07">[Nygard07]</a>, p. 119ff.).\nCategory: <a href="#Improve">Section 4, &#8220;Improve&#8221;</a></p>\n</dd>\n</dl>\n</div>\n</li>\n<li>\n<p><strong><a href="#Capture-Quality-Requirements">Section 2.3.2, &#8220;<span class="pattern">Capture Quality Requirements</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Part of <a href="#ATAM">Section 2.3.1, &#8220;<span class="pattern">Atam</span>&#8221;</a>, Capture and document specific quality requirements. Specialisation of <a href="#Requirements-Analysis">Section 2.3.19, &#8220;<span class="pattern">Requirements-Analysis</span>&#8221;</a>.\nCategory: <a href="#Analyze">Section 2, &#8220;Analyze&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><a id="Change-by-Extension"></a></p>\n<div class="dlist">\n<dl>\n<dt class="hdlist1"><span class="pattern">Change by Extension</span></dt>\n<dd>\n<p>Enable efficient change by creating new components instead of modifying existing ones.\nCategory: <a href="#Improve">Section 4, &#8220;Improve&#8221;</a></p>\n</dd>\n</dl>\n</div>\n</li>\n<li>\n<p><a id="Change-by-Copy"></a></p>\n<div class="dlist">\n<dl>\n<dt class="hdlist1"><span class="pattern">Change by Copy</span></dt>\n<dd>\n<p>Isolate competing change necessity by copying and allowing the copies to evolve independently. Also known as <a href="#Change-Via-Split">[Change-Via-Split]</a>\nCategory: <a href="#Improve">Section 4, &#8220;Improve&#8221;</a></p>\n</dd>\n</dl>\n</div>\n</li>\n<li>\n<p><a id="Change-Via-Split"></a></p>\n<div class="dlist">\n<dl>\n<dt class="hdlist1"><span class="pattern">Change Via Split</span></dt>\n<dd>\n<p>Isolate competing change necessity by copying and allowing the copies to evolve independently. Also known as <a href="#Change-Via-Split">[Change-Via-Split]</a>\nCategory: <a href="#Improve">Section 4, &#8220;Improve&#8221;</a></p>\n</dd>\n</dl>\n</div>\n</li>\n<li>\n<p><strong><a href="#Collect-Opportunities-For-Improvement">Section 5.6, &#8220;<span class="pattern">Collect Opportunities for Improvement</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Keep a list of possible and potential measures, remedies, tactics, strategies for improvements. Regularly match those to your <a href="#Collect-Issues">collection of issues</a>.\nCategory: <a href="#Crosscutting">Section 5, &#8220;Cross-Cutting Practices and Patterns&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><strong><a href="#Collect-Issues">Section 5.7, &#8220;<span class="pattern">Collect Issues</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Keep a list of problems, issues and risks. Regularly match those to your <a href="#Collect-Opportunities-For-Improvement">collection of possible remedies</a>.\nCategory: <a href="#Crosscutting">Section 5, &#8220;Cross-Cutting Practices and Patterns&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><strong><a href="#Context-Analysis">Section 2.3.3, &#8220;<span class="pattern">Context-Analysis</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Analyse external interfaces for risk, technology, business value and other factors.\nCategory: <a href="#Analyze">Section 2, &#8220;Analyze&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><strong><a href="#Data-Analysis">Section 2.3.4, &#8220;<span class="pattern">Data-Analysis</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Analyse and inspect the data created and manipulated by the system for its content, structure, quantity and size.\nCategory: <a href="#Analyze">Section 2, &#8220;Analyze&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><strong><a href="#Debugging">Section 2.3.5, &#8220;<span class="pattern">Debugging</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Identify the source of a bug or misbehavior by observing the\ndetailed flow of execution, e.g. stepwise execution of program statements. Usually supported by <em>debugger</em>. Specialisation of <a href="#Root-Cause-Analysis">Section 2.3.20, &#8220;<span class="pattern">Root Cause Analysis</span>&#8221;</a>.\nCategory: <a href="#Analyze">Section 2, &#8220;Analyze&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><a id="Deprecate-Obsolete-Parts"></a></p>\n<div class="dlist">\n<dl>\n<dt class="hdlist1"><span class="pattern">Deprecate Obsolete Parts</span></dt>\n<dd>\n<p>Actively mark parts in software that aren&#8217;t needed anymore and communicate to your consumers or customers, that you will remove specific functionality in the future.\nCategory: <a href="#Improve">Section 4, &#8220;Improve&#8221;</a></p>\n</dd>\n</dl>\n</div>\n</li>\n<li>\n<p><strong><a href="#Development-Process-Analysis">Section 2.3.6, &#8220;<span class="pattern">Development-Process-Analysis</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Analyse and inspect the development process (as documented or described by stakeholders) for appropriateness, problems or problem-areas.\nCategory: <a href="#Analyze">Section 2, &#8220;Analyze&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><strong><a href="#Documentation-Analysis">Section 2.3.7, &#8220;<span class="pattern">Documentation-Analysis</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Analyse existing documentation for availability, correctness, actuality, problems or problem-areas.\nCategory: <a href="#Analyze">Section 2, &#8220;Analyze&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><a id="Document-Problems"></a></p>\n<div class="dlist">\n<dl>\n<dt class="hdlist1"><span class="pattern">Document Problems</span></dt>\n<dd>\n<p>See <a href="#Improvement-Backlog">Improvement Backlog</a>.\nCategory: <a href="#Crosscutting">Section 5, &#8220;Cross-Cutting Practices and Patterns&#8221;</a></p>\n</dd>\n</dl>\n</div>\n</li>\n<li>\n<p><strong><a href="#Estimate-Feature-Value">Section 3.3.1, &#8220;<span class="pattern">Estimate Feature Value</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Estimate the (monetary) value of a given feature, so you can compare features of the system with each other.\nCategory: <a href="#Evaluate">Section 3, &#8220;Evaluate&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><strong><a href="#Estimate-In-Interval">Section 3.3.2, &#8220;<span class="pattern">Estimate in Interval</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Estimation differs from <strong>measurement</strong> in its inherent uncertainty. Therefore, estimate in intervals, giving lower and upper bounds. The difference between the two shows your confidence in the estimate. Low (relative) difference means high confidence.\nCategory: <a href="#Evaluate">Section 3, &#8220;Evaluate&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><strong><a href="#Estimate-Issue-Cost">Section 3.3.3, &#8220;<span class="pattern">Estimate Issue Cost</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Find out how much a given issue costs in units of money or effort in a period of time or for every occurence.\nCategory: <a href="#Evaluate">Section 3, &#8220;Evaluate&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><strong><a href="#Estimate-Improvement-Cost">Section 3.3.4, &#8220;<span class="pattern">Estimate Improvement Cost</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Determine how much a specific improvement (a set of actions taken to eliminate or reduce a specific issue or problem) is likely to cost (in money and/or effort).\nCategory: <a href="#Evaluate">Section 3, &#8220;Evaluate&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><strong><a href="#Expect-Denial">Section 5.8, &#8220;<span class="pattern">Expect Denial</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Some people will oppose your findings, will whitewash or sugarcoat issues, problems or <a href="#Root-Cause-Analysis">root causes</a>. Regardless on how careful you prepared your analysis, they will try to diminish or attack your findings. Category: <a href="#Crosscutting">Section 5, &#8220;Cross-Cutting Practices and Patterns&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><strong><a href="#Explicit-Assumption">Section 5.9, &#8220;<span class="pattern">Explicit Assumption</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Compensate missing facts (especially requirements, goals, estimates, opinions) by explicit (usually written) assumptions about those facts.\nCategory: <a href="#Crosscutting">Section 5, &#8220;Cross-Cutting Practices and Patterns&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><a id="Extract-Reusable-Component"></a></p>\n<div class="dlist">\n<dl>\n<dt class="hdlist1"><span class="pattern">Extract Reusable Component</span></dt>\n<dd>\n<p>Extract code from an existing system to create a reusable component. See <a href="#SERIOUS-Refactoring">[SERIOUS-Refactoring]</a>, page 95.\nCategory: <a href="#Improve">Section 4, &#8220;Improve&#8221;</a></p>\n</dd>\n</dl>\n</div>\n</li>\n<li>\n<p><strong><a href="#Fail-Fast">Section 5.10, &#8220;<span class="pattern">Fail Fast</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Identify quality issues as early as possible and aim to fix them.\nCategory: <a href="#Crosscutting">Section 5, &#8220;Cross-Cutting Practices and Patterns&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><strong><a href="#Fast-Feedback">Section 5.11, &#8220;<span class="pattern">Fast Feedback</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Evaluate the quality of work artifacts and processes as early as possible. Enables teams to apply corrective actions or take countermeasures as early as possible.\nCategory: <a href="#Crosscutting">Section 5, &#8220;Cross-Cutting Practices and Patterns&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><a id="Front-End-Switch"></a></p>\n<div class="dlist">\n<dl>\n<dt class="hdlist1"><span class="pattern">Front End Switch</span></dt>\n<dd>\n<p>Route front-end requests to either new or old backend systems, depending on their nature, content-negotiation or other request criteria. This is especially helpful to support <a href="#Never-Change-Running-System">[Never-Change-Running-System]</a>.\nCategory: <a href="#Improve">Section 4, &#8220;Improve&#8221;</a></p>\n</dd>\n</dl>\n</div>\n</li>\n<li>\n<p><a id="Group-Improvement-Actions"></a></p>\n<div class="dlist">\n<dl>\n<dt class="hdlist1"><span class="pattern">Group Improvement Actions</span></dt>\n<dd>\n<p>Collect several improvement actions, which can or shall be applied or implemented together.\nCategory: <a href="#Improve">Section 4, &#8220;Improve&#8221;</a></p>\n</dd>\n</dl>\n</div>\n</li>\n<li>\n<p><a id="Handle-If-Else-Chains"></a></p>\n<div class="dlist">\n<dl>\n<dt class="hdlist1"><span class="pattern">Handle If Else Chains</span></dt>\n<dd>\n<p>Refactor nested if-then-else structures for improved understandability. Can be seen as a specialisation of <a href="#Remove-Nested-Control-Structures">[Remove-Nested-Control-Structures]</a>.\nCategory: <a href="#Improve">Section 4, &#8220;Improve&#8221;</a></p>\n</dd>\n</dl>\n</div>\n</li>\n<li>\n<p><strong><a href="#Hierarchical-Quality-Model">Section 2.3.9, &#8220;<span class="pattern">Hierarchical-Quality-Model</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Decompose the overall goal of "high quality" into more detailed and precise requirements, finally resulting in a tree-like structure. See <a href="#ATAM">Section 2.3.1, &#8220;<span class="pattern">Atam</span>&#8221;</a> and <a href="#Quality-Requirements">[Quality-Requirements]</a>.\nCategory: <a href="#Analyze">Section 2, &#8220;Analyze&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><strong><a href="#Impact-Analysis">Section 5.12, &#8220;<span class="pattern">Impact Analysis</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Determine what impact (in code, concepts and\n  the organization) a specific action (e.g. refactoring) will or might have.\nCategory: <a href="#Crosscutting">Section 5, &#8220;Cross-Cutting Practices and Patterns&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><a id="Improve-Code-Layout"></a></p>\n<div class="dlist">\n<dl>\n<dt class="hdlist1"><span class="pattern">Improve Code Layout</span></dt>\n<dd>\n<p>Making code easier to read results in better understandability.\nCategory: <a href="#Improve">Section 4, &#8220;Improve&#8221;</a></p>\n</dd>\n</dl>\n</div>\n</li>\n<li>\n<p><strong><a href="#Improve-Logging">Section 4.10.4, &#8220;<span class="pattern">Improve Logging</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Making runtime analysis easier with meaningful logs. This includes decentralized log analysis as well as well-structured log levels, markers and log message phrasing.\nCategory: <a href="#Improve">Section 4, &#8220;Improve&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><strong><a href="#Improvement-Backlog">Section 5.14, &#8220;<span class="pattern">Improvement Backlog</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Keep a backlog of possible improvements, remedies, tactics or strategies.\nCategory: <a href="#Crosscutting">Section 5, &#8220;Cross-Cutting Practices and Patterns&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><strong><a href="#Infrastructure-Analysis">Section 2.3.8, &#8220;<span class="pattern">Infrastructure-Analysis</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Analyze the technical infrastructure of the <a href="#System">[System]</a>, e.g. with respect to time and resource consumption or creation. Part of <a href="#Runtime-Analysis">Section 2.3.21, &#8220;<span class="pattern">Runtime-Analysis</span>&#8221;</a>. Category: <a href="#Analyze">Section 2, &#8220;Analyze&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><strong><a href="#Instrument-System">Section 2.3.10, &#8220;<span class="pattern">Instrument System</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Instrument either the executable or the source code to make\n<a href="#Explicit-Assumption">assumtions explicit</a> and expand on <a href="#Runtime-Analysis">Section 2.3.21, &#8220;<span class="pattern">Runtime-Analysis</span>&#8221;</a> and\n<a href="#Runtime-Artifact-Analysis">[Runtime-Artifact-Analysis]</a>.\nCategory: <a href="#Analyze">Section 2, &#8220;Analyze&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><strong><a href="#Interface-Segregation-Principle">Section 4.10.5, &#8220;<span class="pattern">Interface Segregation Principle</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Reduce coupling between clients and service provider.\nCategory: <a href="#Improve">Section 4, &#8220;Improve&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><strong><a href="#Introduce-Boy-Scout-Rule">Section 4.10.6, &#8220;<span class="pattern">Introduce Boy Scout Rule</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Establish a policy to perform certain structural\nimprovements each time an artifact (source code, configuration, documents etc.)\nis changed. Usable in situations where a <a href="#Refactoring-Plan">[Refactoring-Plan]</a> is not feasible or in\naddition to such a plan.\nCategory: <a href="#Improve">Section 4, &#8220;Improve&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><a id="Introduce-Layering"></a></p>\n<div class="dlist">\n<dl>\n<dt class="hdlist1"><span class="pattern">Introduce Layering</span></dt>\n<dd>\n<p>Introduce <em>layers</em> within the source code to improve <em>separation of concern</em>. It&#8217;s common to have at least a <em>business layer</em> and an <em>interface layer</em> - the latter for both user- and programatic interfaces. See <a href="http://blog.8thlight.com/uncle-bob/2012/08/13/the-clean-architecture.html">Uncle Bob&#8217;s Clean Architecture</a> for a short summary.\nCategory: <a href="#Improve">Section 4, &#8220;Improve&#8221;</a></p>\n</dd>\n</dl>\n</div>\n</li>\n<li>\n<p><a id="Isolate-Changes"></a></p>\n<div class="dlist">\n<dl>\n<dt class="hdlist1"><span class="pattern">Isolate Changes</span></dt>\n<dd>\n<p>Introduce interfaces and intra-system borders, so that changes cannot propagate to other areas.\nCategory: <a href="#Improve">Section 4, &#8220;Improve&#8221;</a></p>\n</dd>\n</dl>\n</div>\n</li>\n<li>\n<p><strong><a href="#Issue-List">Section 5.15, &#8220;<span class="pattern">Issue List</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Keep a list or collection or issues (problems, risks) - together with an appropriate amount of description and evaluation.\nCategory: <a href="#Crosscutting">Section 5, &#8220;Cross-Cutting Practices and Patterns&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><strong><a href="#Issue-Tracker-Analysis">Section 2.3.11, &#8220;<span class="pattern">Issue-Tracker-Analysis</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Analyse entries from issue-tracker to identify critical areas, components or stakeholders.\nCategory: <a href="#Analyze">Section 2, &#8220;Analyze&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><a id="Keep-Data-Toss-Code"></a></p>\n<div class="dlist">\n<dl>\n<dt class="hdlist1"><span class="pattern">Keep Data Toss Code</span></dt>\n<dd>\n<p>A strategy to improve systems, keeping the data created with the (old) systems as foundation for a new one. Also described as <a href="#Keller-Migration">Bridge-to-the-New-Town</a> (by Wolfgang Keller). This is the opposite of <a href="#Never-Change-Running-System">[Never-Change-Running-System]</a>.\nCategory: <a href="#Improve">Section 4, &#8220;Improve&#8221;</a></p>\n</dd>\n</dl>\n</div>\n</li>\n<li>\n<p><strong><a href="#Manage-Complex-Client-Dependencies-With-Facade">Section 4.10.7, &#8220;<span class="pattern">Manage Complex Client Dependencies With Facade</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Simplify the interaction of a client with a set of service components.\nCategory: <a href="#Improve">Section 4, &#8220;Improve&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><strong><a href="#Measure">Section 4.10.8, &#8220;<span class="pattern">Measure</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Gather various metrics and visualize them on dashboards in order to make your system behavior more predictable and assumed coincidences explainable. Examples of such metrics are thread pool saturation, number of failed logins, requests per second but also number of successful orders today, amount-of-time-spent-debugging-this-component, code-metrics, amount-of-effort-needed-for-feature&#8230;&#8203;\nCategory: <a href="#Improve">Section 4, &#8220;Improve&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><a id="Migrate-Data"></a></p>\n<div class="dlist">\n<dl>\n<dt class="hdlist1"><span class="pattern">Migrate Data</span></dt>\n<dd>\n<p>Transform existing data from one structure or representation into another by keeping its original intent or semantic intact.\nCategory: <a href="#Improve">Section 4, &#8220;Improve&#8221;</a></p>\n</dd>\n</dl>\n</div>\n</li>\n<li>\n<p><a id="Mikado-Method"></a></p>\n<div class="dlist">\n<dl>\n<dt class="hdlist1"><span class="pattern">Mikado-Method</span></dt>\n<dd>\n<p>Coordinated <a href="#Refactoring">refactoring</a> effort, described in the <a href="#Mikado">Mikado-book</a>.\nCategory: <a href="#Improve">Section 4, &#8220;Improve&#8221;</a></p>\n</dd>\n</dl>\n</div>\n</li>\n<li>\n<p><a id="Natural-Death"></a></p>\n<div class="dlist">\n<dl>\n<dt class="hdlist1"><span class="pattern">Natural Death</span></dt>\n<dd>\n<p>Keep old system running and only retire it once all objects contained reach end of life according to their life cycle.\nCategory: <a href="#Improve">Section 4, &#8220;Improve&#8221;</a></p>\n</dd>\n</dl>\n</div>\n</li>\n<li>\n<p><a id="Never-Change-Running-System"></a></p>\n<div class="dlist">\n<dl>\n<dt class="hdlist1"><span class="pattern">Never Change Running System</span></dt>\n<dd>\n<p>To minimize risks, you should try to refrain from changes to existing (working) code - as every change\ninevitably introduces new risks or even bugs.\nCategory: <a href="#Improve">Section 4, &#8220;Improve&#8221;</a></p>\n</dd>\n</dl>\n</div>\n</li>\n<li>\n<p><a id="Never-Rewrite-Running-System"></a></p>\n<div class="dlist">\n<dl>\n<dt class="hdlist1"><span class="pattern">Never Rewrite Running System</span></dt>\n<dd>\n<p>Joel Spolsky arguments, <a href="#Spolsky-NeverRewrite">never to rewrite a system from scratch</a>, as you will likely make many new mistake and won&#8217;t generate much added value.\nCategory: <a href="#Improve">Section 4, &#8220;Improve&#8221;</a></p>\n</dd>\n</dl>\n</div>\n</li>\n<li>\n<p><strong><a href="#Organizational-Analysis">Section 2.3.12, &#8220;<span class="pattern">Organizational-Analysis</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Analyse and inspect organization(s) responsible for the system.\nCategory: <a href="#Analyze">Section 2, &#8220;Analyze&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><a id="Outside-in-Interfaces"></a></p>\n<div class="dlist">\n<dl>\n<dt class="hdlist1"><span class="pattern">Outside-in Interfaces</span></dt>\n<dd>\n<p>Modularize system aligned to (existing) external interfaces.\nCategory: <a href="#Improve">Section 4, &#8220;Improve&#8221;</a></p>\n</dd>\n</dl>\n</div>\n</li>\n<li>\n<p><strong><a href="#Pre-Interview-Questionnaire">Section 2.3.16, &#8220;<span class="pattern">Pre Interview Questionnaire</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Prior to interviewing stakeholders, present them with a written questionnaire, so they can reflect in advance. A specialisation of <a href="#Questionnaire">Section 2.3.18, &#8220;<span class="pattern">Questionnaire</span>&#8221;</a>.\nCategory: <a href="#Analyze">Section 2, &#8220;Analyze&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><strong><a href="#Pre-Mortem">Section 2.3.17, &#8220;<span class="pattern">Pre-Mortem</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Identify issues that could let become the current project a huge disaster.\nCategory: <a href="#Analyze">Section 2, &#8220;Analyze&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><strong><a href="#Qualitative-Analysis">Section 2.3.14, &#8220;<span class="pattern">Qualitative Analysis</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Analyze which quality goals of the <a href="#System">[System]</a> are at risk and which are met by the current implementation. Needs concrete <a href="#Quality-Requirements">[Quality-Requirements]</a>. See <a href="#ATAM">Section 2.3.1, &#8220;<span class="pattern">Atam</span>&#8221;</a>.\nCategory: <a href="#Analyze">Section 2, &#8220;Analyze&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><a id="Quality-Driven-Software-Architecture"></a></p>\n<div class="dlist">\n<dl>\n<dt class="hdlist1"><span class="pattern">Quality Driven Software Architecture</span> (QDSA)</dt>\n<dd>\n<p>Derive (technical, structural or process-related) decisions based upon detailed quality requirements. QDSA requires <a href="#Capture-Quality-Requirements">explicit quality requirements</a>.\nCategory: <a href="#Improve">Section 4, &#8220;Improve&#8221;</a></p>\n</dd>\n</dl>\n</div>\n</li>\n<li>\n<p><strong><a href="#Quantitative-Analysis">Section 2.3.15, &#8220;<span class="pattern">Quantitative-Analysis</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Measure artifacts or processes within the system, e.g. source code. For example, see <a href="#Runtime-Analysis">Section 2.3.21, &#8220;<span class="pattern">Runtime-Analysis</span>&#8221;</a> and <a href="#Static-Code-Analysis">Section 2.3.25, &#8220;<span class="pattern">Static Code Analysis</span>&#8221;</a>.\nCategory: <a href="#Analyze">Section 2, &#8220;Analyze&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><strong><a href="#Questionnaire">Section 2.3.18, &#8220;<span class="pattern">Questionnaire</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Written collection of questions presented to stakeholders. Can be addendum, preparation or replacement of <a href="#Stakeholder-Interview">Section 2.3.24, &#8220;<span class="pattern">Stakeholder Interview</span>&#8221;</a>.\nCategory: <a href="#Analyze">Section 2, &#8220;Analyze&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><a id="Refactoring"></a></p>\n<div class="dlist">\n<dl>\n<dt class="hdlist1"><span class="pattern">Refactoring</span></dt>\n<dd>\n<p>Source code transformation that does not change functionality of system. See <a href="#Fowler-Refactoring">[Fowler-Refactoring]</a>.\nCategory: <a href="#Improve">Section 4, &#8220;Improve&#8221;</a></p>\n</dd>\n</dl>\n</div>\n</li>\n<li>\n<p><a id="Refactoring-Plan"></a></p>\n<div class="dlist">\n<dl>\n<dt class="hdlist1"><span class="pattern">Refactoring Plan</span></dt>\n<dd>\n<p>The route of refactoring, as discussed within the development team. This plan should always be visible to every team member.\nCategory: <a href="#Improve">Section 4, &#8220;Improve&#8221;</a></p>\n</dd>\n</dl>\n</div>\n</li>\n<li>\n<p><strong><a href="#Requirements-Analysis">Section 2.3.19, &#8220;<span class="pattern">Requirements-Analysis</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Analyze and document (current) requirements: required features and required constraints\nCategory: <a href="#Analyze">Section 2, &#8220;Analyze&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><a id="Remove-Nested-Control-Structures"></a></p>\n<div class="dlist">\n<dl>\n<dt class="hdlist1"><span class="pattern">Remove Nested Control Structures</span></dt>\n<dd>\n<p>Re-structure code so that deeply nested or complicated control structures are replaced by semantically identical versions. Special case of <a href="#Refactoring">[Refactoring]</a>, similar to <a href="#Untangle-Code">[Untangle-Code]</a>. Often performed by reducing complexity and especially cyclomatic complexity. When reducing code complexity one needs to make sure we&#8217;re not exchanging inner/ method/ cyclomatic complexity by outer/ design or runtime complexity.\nCategory: <a href="#Improve">Section 4, &#8220;Improve&#8221;</a></p>\n</dd>\n</dl>\n</div>\n</li>\n<li>\n<p><strong><a href="#Report-Structure">Section 5.17, &#8220;<span class="pattern">Report-Structure</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>A generic structure for written audit or review reports, usually\nfollowing an <a href="#Analyze">Section 2, &#8220;Analyze&#8221;</a> phase. See <a href="#Slide-Or-Write">Section 5.19, &#8220;<span class="pattern">Slide or Write</span>&#8221;</a>. Category: <a href="#Crosscutting">Section 5, &#8220;Cross-Cutting Practices and Patterns&#8221;</a>.</p>\n</div>\n</li>\n<li>\n<p><strong><a href="#Root-Cause-Analysis">Section 2.3.20, &#8220;<span class="pattern">Root Cause Analysis</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p><em>Find the evil at the bottom</em>: Explicitely differentiate between symptom and cause: Identify root causes of symptoms, problems or issues.\nCategory: <a href="#Analyze">Section 2, &#8220;Analyze&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><strong><a href="#Runtime-Analysis">Section 2.3.21, &#8220;<span class="pattern">Runtime-Analysis</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Analyze the runtime behavior of the <a href="#System">[System]</a>, e.g. with respect to time and resource consumption or creation.\nCategory: <a href="#Analyze">Section 2, &#8220;Analyze&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><a id="Runtime-Artifact-Analysis"></a></p>\n<div class="dlist">\n<dl>\n<dt class="hdlist1"><span class="pattern">Runtime Artifact Analysis</span></dt>\n<dd>\n<p>Artifacts that were created by a running system are a gold mine. They allow you to get a deeper understanding of the inner workings of a software system. Use log management, aggregators and monitoring tools to gather log files. Then analyze usage patterns, stack traces or errors to see what the system is really doing.\nCategory: <a href="#Analyze">Section 2, &#8220;Analyze&#8221;</a></p>\n</dd>\n</dl>\n</div>\n</li>\n<li>\n<p><a id="Sample-For-Improvement"></a></p>\n<div class="dlist">\n<dl>\n<dt class="hdlist1"><span class="pattern">Sample For Improvement</span></dt>\n<dd>\n<p>Provide concrete code example for typical improvement situations, so that developers can improve existing code easily.\nCategory: <a href="#Improve">Section 4, &#8220;Improve&#8221;</a></p>\n</dd>\n</dl>\n</div>\n</li>\n<li>\n<p><a id="Schedule-Work"></a></p>\n<div class="dlist">\n<dl>\n<dt class="hdlist1"><span class="pattern">Schedule Work</span></dt>\n<dd>\n<p>Schedule refactoring or improvement work, so that all (business and technical) stakeholders know about them.\nCategory: <a href="#Improve">Section 4, &#8220;Improve&#8221;</a></p>\n</dd>\n</dl>\n</div>\n</li>\n<li>\n<p><strong><a href="#Separate-Cause-From-Effect">Section 5.18, &#8220;<span class="pattern">Separate-Cause-From-Effect</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>See <a href="#Root-Cause-Analysis">Section 2.3.20, &#8220;<span class="pattern">Root Cause Analysis</span>&#8221;</a>.\nCategory: <a href="#Crosscutting">Section 5, &#8220;Cross-Cutting Practices and Patterns&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><strong><a href="#Software-Archeology">Section 2.3.22, &#8220;<span class="pattern">Software Archeology</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Understand software by analysing its source code, usually in absence of other documentation or knowledge sources.\nCategory: <a href="#Analyze">Section 2, &#8220;Analyze&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><strong><a href="#Stakeholder-Analysis">Section 2.3.23, &#8220;<span class="pattern">Stakeholder Analysis</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Find out which people, roles, organizational units or organizations have interests in the <a href="#System">[System]</a>.\nCategory: <a href="#Analyze">Section 2, &#8220;Analyze&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><strong><a href="#Stakeholder-Interview">Section 2.3.24, &#8220;<span class="pattern">Stakeholder Interview</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Conduct personal interviews with key persons of the <a href="#System">[System]</a> or associated processes to identify, clarify or discuss potential issues and remedies.\nCategory: <a href="#Analyze">Section 2, &#8220;Analyze&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><a id="Stakeholder-Specific-Communication"></a></p>\n<div class="dlist">\n<dl>\n<dt class="hdlist1"><span class="pattern">Stakeholder Specific Communication</span></dt>\n<dd>\n<p>Communicate with stakeholders by actively applying their specific or favored terminology and/or communication channels.\nCategory: <a href="#Crosscutting">Section 5, &#8220;Cross-Cutting Practices and Patterns&#8221;</a></p>\n</dd>\n</dl>\n</div>\n</li>\n<li>\n<p><strong><a href="#Static-Code-Analysis">Section 2.3.25, &#8220;<span class="pattern">Static Code Analysis</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Analyse source code to identify building blocks and their dependencies, determine complexity, coupling, cohesion and other structural properties.\nCategory: <a href="#Analyze">Section 2, &#8220;Analyze&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><strong><a href="#strangler-approach">Section 4.7.8, &#8220;<span class="pattern">Strangler Approach</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Approach to gradually create a new system around the edges of the old, letting it grow slowly over several years until the old system is strangled.\nCategory: <a href="#Improve">Section 4, &#8220;Improve&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><a id="Structural-Analysis"></a></p>\n<div class="dlist">\n<dl>\n<dt class="hdlist1"><span class="pattern">Structural Analysis</span></dt>\n<dd>\n<p>Analyze the static structures (e.g. building block structure) of the <a href="#System">[System]</a>, e.g. package or module dependencies, runtime- and/or deployment dependencies. See the more specific <a href="#Static-Code-Analysis">Section 2.3.25, &#8220;<span class="pattern">Static Code Analysis</span>&#8221;</a>, <a href="#Context-Analysis">Section 2.3.3, &#8220;<span class="pattern">Context-Analysis</span>&#8221;</a> and <a href="#Data-Analysis">Section 2.3.4, &#8220;<span class="pattern">Data-Analysis</span>&#8221;</a>.\nCategory: <a href="#Analyze">Section 2, &#8220;Analyze&#8221;</a></p>\n</dd>\n</dl>\n</div>\n</li>\n<li>\n<p><a id="Systematic-Decisions"></a></p>\n<div class="dlist">\n<dl>\n<dt class="hdlist1"><span class="pattern">Systematic Decisions</span></dt>\n<dd>\n<p>Systematically prepare and take decisions by finding appropriate options, check assumptions, overcome emotion and prepare to be wrong. See <a href="#heath-decisive">Decisive (by C+D Heath)</a>.\nCategory: <a href="#Crosscutting">Section 5, &#8220;Cross-Cutting Practices and Patterns&#8221;</a></p>\n</dd>\n</dl>\n</div>\n</li>\n<li>\n<p><strong><a href="#Take-What-They-Mean">Section 2.3.26, &#8220;<span class="pattern">Take What They Mean, Not What They Say</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Natural language has the risk, that semantics on the senders\' side differs from semantics of the receiver: People simply misunderstand each other because <em>meaning</em> of words differ between people. Pattern provided by Phillip Ghadir (who is too humble to claim this discovery)\nCategory: <a href="#Analyze">Section 2, &#8220;Analyze&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><a id="Toggle-Feature"></a></p>\n<div class="dlist">\n<dl>\n<dt class="hdlist1"><span class="pattern">Toggle Feature</span></dt>\n<dd>\n<p>Simultaneously support evolved, competing or conflicting features at runtime by toggling feature flags. Category: <a href="#Improve">Section 4, &#8220;Improve&#8221;</a>, see also:</p>\n<div class="ulist">\n<ul>\n<li>\n<p><a href="http://en.wikipedia.org/wiki/Feature_toggle" class="bare">http://en.wikipedia.org/wiki/Feature_toggle</a></p>\n</li>\n<li>\n<p><a href="http://www.togglz.org/" class="bare">http://www.togglz.org/</a></p>\n</li>\n</ul>\n</div>\n</dd>\n</dl>\n</div>\n</li>\n<li>\n<p><strong><a href="#Traceability">Section 5.20, &#8220;<span class="pattern">Traceability</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Maintain references to the origin of problems or issues: Remember who told you about a problem, in which documents you found issues and in what version of the source you identified risks or faults.\nCategory: <a href="#Crosscutting">Section 5, &#8220;Cross-Cutting Practices and Patterns&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><a id="Untangle-Code"></a></p>\n<div class="dlist">\n<dl>\n<dt class="hdlist1"><span class="pattern">Untangle Code</span></dt>\n<dd>\n<p>Remove unneccessary complications in code, e.g. nested structures, dependencies, dead-code, duplicate-code etc. See <a href="#Remove-Nested-Control-Structures">[Remove-Nested-Control-Structures]</a>. Special case of <a href="#Refactoring">[Refactoring]</a>.\nCategory: <a href="#Improve">Section 4, &#8220;Improve&#8221;</a></p>\n</dd>\n</dl>\n</div>\n</li>\n<li>\n<p><a id="Use-Case-Cluster"></a></p>\n<div class="dlist">\n<dl>\n<dt class="hdlist1"><span class="pattern">Use Case Cluster</span></dt>\n<dd>\n<p>Understand system functionality by grouping functionality into clusters to reduce complexity.\nCategory: <a href="#Analyze">Section 2, &#8220;Analyze&#8221;</a></p>\n</dd>\n</dl>\n</div>\n</li>\n<li>\n<p><strong><a href="#User-Analysis">Section 2.3.27, &#8220;<span class="pattern">User-Analysis</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Get an overview of user-categories or -groups, their goals, requirements\nand expectations. Find out about issues users have with the system. Related to <a href="#Stakeholder-Analysis">Section 2.3.23, &#8220;<span class="pattern">Stakeholder Analysis</span>&#8221;</a>, <a href="#Context-Analysis">Section 2.3.3, &#8220;<span class="pattern">Context-Analysis</span>&#8221;</a> and <a href="#Requirements-Analysis">Section 2.3.19, &#8220;<span class="pattern">Requirements-Analysis</span>&#8221;</a>. Category: <a href="#Analyze">Section 2, &#8220;Analyze&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><strong><a href="#Use-Invariants-To-Kill-Zombies">Section 4.10.9, &#8220;<span class="pattern">Use Invariants To Kill Zombies</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Use Invariants to make sure that you can\nkill Zombies safely. If code seems to be &#8220;dead&#8221;&#8201;&#8212;&#8201;meaning that it\nsupposedly isn&#8217;t called anymore&#8201;&#8212;&#8201;but no one dares to remove it from the\ncodebase, the introduction of invariants can provide reliable feedback on\nwhether it is safe to remove the code or not.\nCategory: <a href="#Improve">Section 4, &#8220;Improve&#8221;</a></p>\n</div>\n</li>\n<li>\n<p><strong><a href="#View-Based-Understanding">Section 2.3.28, &#8220;<span class="pattern">View Based Understanding</span>&#8221;</a></strong></p>\n<div class="paragraph">\n<p>Create architectural views (mainly building block view) to understand and communicate code structure.\nCategory: <a href="#Analyze">Section 2, &#8220;Analyze&#8221;</a></p>\n</div>\n</li>\n</ol>\n</div>'
    }
  ]
}
